- name: Generate users list
  hosts: localhost
  connection: local
  become: no
  gather_facts: no

  tasks:
    - name: generate users list
      set_fact:
        users: "{{ users|default([]) + [ {'name': 'student' + item, 'username': 'student' + item, 'email': 'student' + item + '@example.com'} ] }}"
      with_sequence: start="{{ student_count_start }}" end="{{ student_count_end }}"
      when: student_count_start is defined and student_count_end is defined

- name: Create lab instances in AWS
  hosts: localhost
  connection: local
  become: no
  gather_facts: no
  roles:
    - manage_ec2_instances

- name: Configure common options on managed nodes and control nodes
  hosts: "managed_nodes:control_nodes"
  become: yes
  roles:
    - user_accounts
    - common

- name: Configure control node
  hosts: control_nodes
  become: yes
  roles:
    - control_node

- name: Create hosting instance on AWS
  hosts: localhost
  connection: local
  become: no
  gather_facts: no
  roles:
    - setup_ec2_hosting

- name: Install nginx
  hosts: hosting_nodes
  become: yes
  roles:
    - nginx

  post_tasks:
    - name: copy index.html
      copy:
        src: index.html
        dest: /usr/share/nginx/html/index.html

    - name: Install Git
      yum:
        name: git
        state: present

    - name: create lightbulb directory
      file:
        path: /usr/share/nginx/html/lightbulb
        state: directory

    - name: Check out decks
      git:
        repo: https://github.com/ansible/lightbulb.git
        dest: /usr/share/nginx/html/lightbulb

    - name: set selinux
      sefcontext:
        target: '/usr/share/nginx/html'
        setype: httpd_sys_content_t
        state: present
      when: ansible_selinux.status is defined and ansible_selinux.status == "enabled"

    - name: proper response from nginx is received
      uri:
        url: http://{{ inventory_hostname }}/
        return_content: yes
        validate_certs: no
      register: response
      until: "'Ansible Lightbulb Workshop' in response.content"
      retries: 2
      delay: 1
      ignore_errors: yes

    - name: output url
      debug:
        msg: 'application is available at http://{{ inventory_hostname }}/'
      when: response | success

- name: Email inventory to instructor
  hosts: localhost
  connection: local
  become: no
  gather_facts: no
  roles:
    - email-instructor
